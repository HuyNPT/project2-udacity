# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - main
pool:
   name: Default
  
variables:
    # Azure Resource Manager connection created during pipeline creation
    azureServiceConnectionId: '190f9aed-7654-4d11-ad9d-e20483f6a552'
  
    # Web app name
    webAppName: 'Project2-Deploy'
  
    # Agent VM image name
    vmImageName: 'ubuntu-latest'
  
    # Environment name
    environmentName: 'Project2-Deploy'
  
    # Project root folder. Point to the folder containing manage.py file.
    projectRoot: $(System.DefaultWorkingDirectory)
  
    # Python version: 3.7
    pythonVersion: '3.10.12'
  
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    steps:
    - script: |
        mkdir -p $(Agent.ToolsDirectory)/Python/$(pythonVersion)/x64
        mkdir -p $(Agent.ToolsDirectory)/Python/$(pythonVersion)/x64.complete
      displayName: 'Create Python local folders'
    - script: |
       curl -LO https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-22.04-x64.tar.gz
       tar -xvf python-3.10.12-linux-22.04-x64.tar.gz
      workingDirectory: /home/huynpt/myagent/'sudo .'/svc.sh install/_tool/Python/3.10.12/x64
      displayName: 'Downloaded'

    - task: UsePythonVersion@0
      inputs:
          architecture: 'x64'
          versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
  
    - script: |
          python -m venv antenv
          source antenv/bin/activate
          python -m pip install --upgrade pip
          pip install setup
          pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"
  
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
  
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop
  
- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: DeploymentJob
      environment: $(environmentName)
      strategy:
        runOnce:
          deploy:
            steps:
  
            - task: UsePythonVersion@0
              inputs:
                versionSpec: '$(pythonVersion)'
              displayName: 'Use Python version'
  
            - task: AzureWebApp@1
              displayName: 'Deploy Azure Web App : Project2-Deploy'
              inputs:
                azureSubscription: $(azureServiceConnectionId)
                appName: $(webAppName)
                package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip